The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.
Given an integer n, return the number of distinct solutions to the n-queens puzzle.

Input: n = 4
Output: 2
Explanation: There are two distinct solutions to the 4-queens puzzle as shown.

Method 1: Backtracking
TC - O(N!) SC - O(N)

class Solution {
public:
	void Util(int col, int n, int& ans, vector<int>& leftRow, vector<int>& upperDiagonal, vector<int>& lowerDiagonal) {
		if(col == n) {
            ans++;
			return;
		}

		for(int row=0;row<n;row++) {
			if(leftRow[row] == 0 && lowerDiagonal[row+col] == 0 && upperDiagonal[n-1+col-row] == 0) {
				leftRow[row] = 1;
				lowerDiagonal[row+col] = 1;
				upperDiagonal[n-1+col-row] = 1;
				Util(col+1, n, ans, leftRow, upperDiagonal, lowerDiagonal);
				leftRow[row] = 0;
				lowerDiagonal[row+col] = 0;
				upperDiagonal[n-1+col-row] = 0;
			}
		}
	}
    int totalNQueens(int n) {
        int ans = 0;
		vector<int>leftRow(n, 0), upperDiagonal(2*n-1, 0), lowerDiagonal(2*n-1, 0);
		Util(0, n, ans, leftRow, upperDiagonal, lowerDiagonal);
		return ans;
    }
};