Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.
Return the decimal value of the number in the linked list.

Input: head = [1,0,1]
Output: 5
Explanation: (101) in base 2 = (5) in base 10

Method 1: 
TC - O(N) SC - O(N)

class Solution {
public:
    int getDecimalValue(ListNode* head) {
        string num;
        while(head) {
            num += to_string(head->val);
            head = head->next;
        }
        int res = 0,pv = 1;
        for(int i=num.size()-1;i>=0;i--){
            res += pv*(stoi(num.substr(i,1)));
            pv *= 2;
        }
        return res;
    }
};

Method 2: 
TC - O(N) SC - O(1)

class Solution {
public:
    int getDecimalValue(ListNode* head) {
        int ans = 0;
        while (head) {
            ans = 2 * ans + head->val;
            head = head->next;
        }
        return ans;
    }
};

Method 3: Bitwise
TC - O(N) SC - O(1)

class Solution {
public:
    int getDecimalValue(ListNode* head) {
        int res = 0;
        ListNode* curr = head;
        while(curr != NULL) {
            res <<= 1;
            res |= curr->val;
            curr = curr->next;
        }
        return res;
    }
};