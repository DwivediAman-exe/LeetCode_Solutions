class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int>m1,m2;
        for(auto x:nums1)
        {
            m1[x]++;
        }
        for(auto x:nums2)
        {
            m2[x]++;
        }
        vector<int>v;
        for(auto x:m1)
        {
           if(m2.find(x.first)!=m2.end())
               for(int i=0;i<min(x.second,m2[x.first]);i++)
                   v.push_back(x.first);
        }
        return v;
    }
};

Solution 2 : Two pointer 

class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());
        int n1 = (int)nums1.size(), n2 = (int)nums2.size();
        int i1 = 0, i2 = 0;
        vector<int> res;
        while(i1 < n1 && i2 < n2){
            if(nums1[i1] == nums2[i2]) {
                res.push_back(nums1[i1]);
                i1++;
                i2++;
            }
            else if(nums1[i1] > nums2[i2]){
                i2++;
            }
            else{
                i1++;
            }
        }
        return res;
    }
};